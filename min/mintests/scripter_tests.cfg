[Test]
title print_functionality
print "this is print from test case"
[Endtest]

[Test]
title loop-10loop
loop 10
print "10 times on the ui"
endloop
[Endtest]

[Test]
title loop-allownextresult
loop 2
allownextresult -1
endloop
[Endtest]

[Test]
title loop-nested
loop 5
loop 2
print "teen times on ui"
endloop
print "five times on ui"
endloop
[Endtest]

#
# Test class tests
#
[Test]
title testclass-execute
createx demoClass rtc
rtc Example parameters should be seen on ui
delete rtc
[Endtest]

[Test]
title testclass-allownextresult
createx demoClass rtc
allownextresult -1
rtc Four
delete rtc
[Endtest]

[Test]
title testclass-loop
createx demoClass rtc
loop 3
rtc Example three
endloop
[Endtest]

[Test]
title testclass-several-calls-to-methods
createx demoClass rtc
rtc One
rtc Two
rtc Three
delete rtc
[Endtest]

[Test]
title testclasses-call-to-method
createx demoClass rtc
createx demoClass rtc2
createx demoClass rtc3
rtc One
rtc2 Two
rtc3 Three
delete rtc3
delete rtc2
delete rtc
[Endtest]


#
# Combiner tests
#
[Test]
title combiner-run
run minDemoModule dummy.cfg 1
[Endtest]

[Test]
title combiner-run-title
run minDemoModule dummy.cfg 2 title="Demo_2"
[Endtest]

[Test]
title combiner-cancel
run minDemoModule dummy.cfg 2 testid=Demo_2 title="Demo_2"
cancel Demo_2
[Endtest]

[Test]
title combiner-pause
run minDemoModule dummy.cfg 2 testid=Demo_2 title="Demo_2"
pause Demo_2
sleep 10000
resume Demo_2
[Endtest]

[Test]
title combiner-pause-time
run minDemoModule dummy.cfg 2 testid=Demo_2 title="Demo_2"
pause Demo_2 time=10000
[Endtest]

[Test]
title combiner-canceliferror
canceliferror
run minDemoModule dummy.cfg 1
run minDemoModule dummy.cfg 2
[Endtest]

[Test]
title loop and break
var bailout false
createx demoClass rtc
loop 10
 print loop
 #rtc FailingOne
 rtc One
 rtc CheckThreshold 11
 if bailout
   breakloop
 endif
endloop
print out of loop
delete rtc
[Endtest]

[Test]
title test ifs
var foo 0
if foo
 print 1
else 
 print 2 
  if true 
    print 3
  endif
 print 4 
endif
var foo False
if foo
 print 5
endif
[Endtest]

[Test]
title event-set-state
set Event1 state
[Endtest]

[Test]
title event-wait
request Event1 state
wait Event1
release Event1
[Endtest]

[Test]
title event-unset
unset Event1
[Endtest]

[Test]
title test interference
testinterference cpu start cpuload start 10 1000 1000
testinterference cpu stop 
testinterference mem start memload start 10 1000 1000
testinterference mem stop 
testinterference io start ioload start 10 1000 1000
testinterference io stop 
[Endtest]