[Test]
title testclass-execute
description execute example method from testclass
createx demoClass rtc
rtc Example parameters should be seen on ui
delete rtc
[Endtest]

[Test]
title print_functionality
description test that simple printout works
print "this is print from test case"
[Endtest]

[Test]
title loop-10loop
description print from loop
loop 10
print "10 times on the ui"
endloop
[Endtest]

[Test]
title loop-allownextresult
description check allownextresult inside loop
loop 2
allownextresult -1
endloop
[Endtest]

[Test]
title loop-nested
description test loop within a loop
loop 5
loop 2
print "teen times on ui"
endloop
print "five times on ui"
endloop
[Endtest]

#
# Test class tests
#
[Test]
title testclass-execute
description execute example method from testclass
createx demoClass rtc
rtc Example parameters should be seen on ui
delete rtc
[Endtest]

[Test]
title testclass-allownextresult
description allow next result 1 (TP_FAILED)
createx demoClass rtc
allownextresult 1
rtc FailingOne
delete rtc
[Endtest]

[Test]
title testclass-loop
description call method inside loop
createx demoClass rtc
loop 3
rtc Example three
endloop
delete rtc
[Endtest]

[Test]
title testclass-several-calls-to-methods
description call
createx demoClass rtc
description several
rtc One
description methods
rtc Two
rtc Three
delete rtc
[Endtest]

[Test]
title testclasses-call-to-method
description create 3 testobjects and call methods
createx demoClass rtc
createx demoClass rtc2
createx demoClass rtc3
rtc One
rtc2 Two
rtc3 Three
delete rtc3
delete rtc2
delete rtc
[Endtest]


#
# Combiner tests
#
[Test]
title combiner-run
description run test case 1 from minDemoModule
run minDemoModule dummy.cfg 1
[Endtest]

[Test]
title combiner-run-title
description run test case 2 from minDemoModule
description with title
run minDemoModule dummy.cfg 2 title="Demo_2"
[Endtest]

[Test]
title combiner-cancel
description start and cancel test case Demo_2 from minDemoModule
run minDemoModule dummy.cfg 2 testid=Demo_2 title="Demo_2"
cancel Demo_2
[Endtest]

[Test]
title combiner-pause
description pause and resume test case Demo_2
run minDemoModule dummy.cfg 2 testid=Demo_2 title="Demo_2"
pause Demo_2
sleep 10000
resume Demo_2
[Endtest]

[Test]
title combiner-pause-time
description pause Demo_2 for 10000 msecs
run minDemoModule dummy.cfg 2 testid=Demo_2 title="Demo_2"
pause Demo_2 time=10000
[Endtest]

[Test]
title combiner-canceliferror
description run democases with canceliferror on
canceliferror
run minDemoModule dummy.cfg 1
run minDemoModule dummy.cfg 2
[Endtest]

[Test]
title loop and break
description test breakloop keyword
var bailout false
createx demoClass rtc
loop 10
 print loop
 #rtc FailingOne
 rtc One
 rtc CheckThreshold 11
 if bailout
   breakloop
 endif
endloop
print out of loop
delete rtc
[Endtest]

[Test]
title test ifs
description test if-else-endif construct
var foo 0
if foo
 print 1
else 
 print 2 
  if true 
    print 3
  endif
 print 4 
endif
var foo False
if foo
 print 5
endif
[Endtest]

[Test]
title event-set-state
description set state event Event1
set Event1 state
[Endtest]

[Test]
title event-wait
description request wait and release event Event1
request Event1 state
wait Event1
release Event1
[Endtest]

[Test]
title event-unset
description unset event Event1
unset Event1
[Endtest]

[Test]
title test interference
description test cpuload, memload and ioload
sleep 20000
testinterference cpu start cpuload start 10 1000 1000
testinterference cpu stop 
testinterference mem start memload start 10 1000 1000
testinterference mem stop 
testinterference io start ioload start 10 1000 1000
testinterference io stop 
[Endtest]

[Test]
title test interference 2
testinterference cpu start cpuload start 10 1000 0
sleep 1000
testinterference cpu stop 
testinterference mem start memload start 10 1000 0
sleep 1000
testinterference mem stop 
testinterference io start ioload start 10 1000 0
sleep 1000
testinterference io stop 
[Endtest]

[Test]
title test interference 3
testinterference cpu start cpuload start 10 0 0
sleep 1000
testinterference cpu stop 
testinterference mem start memload start 10 0 0
sleep 1000
testinterference mem stop 
testinterference io start ioload start 10 0 0
sleep 1000
testinterference io stop 
[Endtest]

[Test]
title Master Messaging
description allocate slave and run scripter:slave.cfg
description and expect slaveVar
blocktimeout 60
allocate phone slave
var slaveVar 0
remote slave run scripter slave.cfg 1
remote slave expect slaveVar
print "slaveVar" = slaveVar
free slave
[Endtest]
