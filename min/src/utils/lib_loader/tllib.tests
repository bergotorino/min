/*
 * This file is part of MIN Test Framework. Copyright Â© 2008 Nokia Corporation
 * and/or its subsidiary(-ies).
 * Contact: Sampo Saaristo
 * Contact e-mail: DG.MIN-Support@nokia.com
 * 
 * This program is free software: you can redistribute it and/or modify it 
 * under the terms of the GNU General Public License as published by the Free 
 * Software Foundation, version 2 of the License. 
 * 
 * This program is distributed in the hope that it will be useful, but WITHOUT 
 * ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or 
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General  Public License for
 * more details. You should have received a copy of the GNU General Public 
 * License along with this program. If not,  see 
 * <http://www.gnu.org/licenses/>.
 */


/**
 *  @file       tllib.tests
 *  @version    0.1
 *  @brief      This file contains test for MIN library loader utility
 */

/* ------------------------------------------------------------------------- */
/* INCLUDES */
#include <check.h>
#include <min_text.h>

/* ------------------------------------------------------------------------- */
/* CONSTANTS */
/* None */

/* ------------------------------------------------------------------------- */
/* MACROS */
/* None */

/* ------------------------------------------------------------------------- */
/* DATA TYPES */
/* None */

/* ------------------------------------------------------------------------- */
/* LOCAL FUNCTION PROTOTYPES */
/* None */

/* ------------------------------------------------------------------------- */
/* FORWARD DECLARATIONS */
/* None */

/* ------------------------------------------------------------------------- */
/* STRUCTURES */
/* None */

/* ------------------------------------------------------------------------- */
/* ==================== LOCAL FUNCTIONS ==================================== */
/* None */

/* ------------------------------------------------------------------------- */
/* ============================= TESTS ===================================== */
/* ------------------------------------------------------------------------- */
START_TEST(test_lib_open_ok)
{
        test_libl_t tlib;
        Text *path;
        int retval;

        path = tx_create (getenv("PWD")) ;
        tx_c_append (path, "/../src/test_libraries/.libs/minDemoModule.so");
        retval = tl_open  (&tlib, tx_share_buf (path));
        fail_unless (retval == 0, "failed to open %s", tx_share_buf (path) );

        fail_unless (tl_is_ok (&tlib), "tl_is_ok() returns error");
}
END_TEST

START_TEST(test_lib_open_nok)
{
        test_libl_t tlib;
        Text *path;
        int retval;

        path = tx_create (getenv("PWD")) ;
        tx_c_append (path, "/../src/test_libraries/.libs/minDemoModdule.so");
        retval = tl_open  (&tlib, tx_share_buf (path));
        fail_if (retval == 0, "opening %s should have failed", tx_share_buf (path) );

        fail_if (tl_is_ok (&tlib), "tl_is_ok() returns error");
}
END_TEST

START_TEST(test_lib_close_ok)
{
        test_libl_t tlib;
        Text *path;
        int retval;

        path = tx_create (getenv("PWD")) ;
        tx_c_append (path, "/../src/test_libraries/.libs/minDemoModule.so");
        retval = tl_open  (&tlib, tx_share_buf (path));
        fail_unless (retval == 0, "failed to open %s", tx_share_buf (path) );

        fail_unless (tl_is_ok (&tlib), "tl_is_ok() returns error");

        fail_if (tl_close (&tlib), "tl_close() returns error");

}
END_TEST

START_TEST(test_lib_close_nok)
{
        test_libl_t tlib;
        Text *path;
        int retval;

        tlib.test_library_ = INITPTR;
        fail_unless (tl_close (&tlib), "tl_close() should fail");

}
END_TEST

/* ------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------- */
/* ========================== FUNCTIONS ==================================== */
/* ------------------------------------------------------------------------- */
Suite* tllib_suite()
{
        Suite * s = suite_create ("library loader");

        /* Core test case */
        TCase *tc_core = tcase_create ("Core");

        tcase_add_test (tc_core, test_lib_open_ok );
        tcase_add_test (tc_core, test_lib_open_nok );
        tcase_add_test (tc_core, test_lib_close_ok );
        tcase_add_test (tc_core, test_lib_close_nok );

//        tcase_add_test (tc_core, );
        //      tcase_add_test (tc_core, );

        suite_add_tcase (s, tc_core);

        return s;
}
/* ------------------------------------------------------------------------- */
/* End of file */
